# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:9-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Compute checksum of test resources
      - run:
          name: Compute checksum of test resources
          command: |
            resources_checksum=($(find src/test/resources -type f -exec md5sum {} \; | sort -k 2 | md5sum))
            echo Checksum of src/test/resources: $resources_checksum
            echo $resources_checksum > RESOURCES_MD5

      # Download and cache dependencies
      - restore_cache:
          name: Restore Gradle from cache
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: ./gradlew dependencies

      - run:
          name: Install Git LFS
          command: |
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get install git-lfs

      - restore_cache:
          name: Restore Git LFS files from cache
          keys:
            - git-lfs-cache-{{ checksum "RESOURCES_MD5" }}
            - git-lfs-cache-

      - run:
          name: Pull Git LFS files
          command: |
            git lfs install
            git lfs pull

      # Cache Git LFS files
      - save_cache:
          name: Cache Git LFS files
          key: git-lfs-cache-{{ checksum "RESOURCES_MD5" }}
          paths:
            - .git/lfs/objects

      - save_cache:
          name: Cache Gradle
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      
      # Download and install wgrib
      - run:
          name: Install wgrib
          command: |
            sudo apt-get install gcc
            wget ftp://ftp.cpc.ncep.noaa.gov/wd51we/wgrib/wgrib.c
            gcc --version
            gcc wgrib.c -o wgrib
            ./wgrib || echo
            sudo mv ./wgrib /usr/local/bin/

      - run:
          name: Intall wgrib2
          command: |
            sudo apt-get install gfortran make
            wget https://www.ftp.cpc.ncep.noaa.gov/wd51we/wgrib2/wgrib2.tgz
            gunzip wgrib2.tgz
            tar -xvf wgrib2.tar
            cd grib2
            export CC=gcc
            export FC=gfortran
            make
            cd ..

      # run tests!
      - run: ./gradlew test --stacktrace --scan

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
            mkdir -p ~/test-results/junit/report/
            cp -r build/reports/tests/test ~/test-results/junit/report/
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

      # Deploy application as JAR
      - run:
          name: Deploy Application
          command: |
            ./gradlew jar
      - store_artifacts:
          path: build/libs
      
